%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    DoBkgActivity.m                                        %
%                                                           %
%  该文件用于系统背景等效活度测试。                         %
%                                                           %
%  原始数据文件需要按时间存放，并且系统背景数据文件存放在   %
%  最后。                                                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


clear all;
close all;
clc;


FPDIR     = {'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\Background\'; ... 
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\0cm_01\'; ... 
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\0cm_02\'; ...
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\0cm_03\'; ...
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\0cm_04\'; ...
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\0cm_05\'; ...
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\10cm_01\'; ...
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\10cm_02\'; ...
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\10cm_03\'; ...
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\10cm_04\'; ...
             'F:\projects\实验记录-原始数据\2016-03-30_24环探测器系统灵敏度测试\10cm_05\'};
FPEXT     = 'bin';

SingleSize = 20;  % 20-byte

Counts    = zeros(length(FPDIR), 1);
T0        = zeros
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for dr = 1 : length(FPDIR)
    fps = dir(fullfile([char(FPDIR(dr)), '*.', FPEXT]));
    if isempty( fps )
       continue; 
    end
    
    for fpi = 1 : length(fps)
        Counts(dr) = Counts(dr) + fps(fpi).bytes;
    end
    
    Counts(dr) = Counts(dr) ./ SingleSize ./ 2;
end % End of (dr = 1)
         
         
         


TimeWin   = 5;
EGYWin    = [350, 650];
EGYPeak   = 20;

Acal    = 365 * 3.7e4/1000; %%% 放射源初始活度(kcps)
Tcal    = 10 * 60 + 45;      %%% Acal测试时间10:59
Tacq    = 20;                %%% 数据采集持续时间（min）
T0      = [12 * 60 + 25, ...
           12 * 60 + 55, ...
           13 * 60 + 25, ...
           13 * 60 + 55, ...
           14 * 60 + 25, ...
           14 * 60 + 55, ...
           15 * 60 + 25, ...
           15 * 60 + 55, ...
           16 * 60 + 25, ...
           16 * 60 + 55, ...
           17 * 60 + 25, ...
           17 * 60 + 55, ...
           18 * 60 + 25, ...
           18 * 60 + 55, ...
           19 * 60 + 25, ...
           19 * 60 + 55, ...
           20 * 60 + 25, ...
           20 * 60 + 55, ...
           21 * 60 + 25, ...
           21 * 60 + 55, ...
           22 * 60 + 25, ...
           22 * 60 + 55, ...
           23 * 60 + 25, ...
           23 * 60 + 55];
       
BkgRate     = 0.4355;                     %%% 实际系统背景符合事件率(kcps)
SinglesRate = [2.7387; ...                %%% 实际测量到的
               1.4225; ...                %%% 系统符合事件率（kcps）
               1.2529; ...                           
               1.1094; ...                            
               0.9872; ...                            
               0.8885; ...                            
               0.8137; ...                            
               0.7466; ...                            
               0.6841; ...                            
               0.6457; ...                            
               0.6095; ...                            
               0.5941; ...                            
               0.5660];                           

% %%%%  以下代码不需要更改
% %%%%
% fps = dir(fullfile([FPDIR, FPEXT]));
% if isempty( fps )
%     disp('There is no matched file!!!');
%     finish;
% end
% 
% for fpi = 1 : length(fps)
%     %%% 获取单事件
%     singles = GetSinglesFromFile([FPDIR, fps(fpi).name], 20);
%     if isempty(singles)
%         continue;
%     end
%     
%     %%% 获取符合事件对
%     cocis   = reshape(singles', ...
%                       [length(singles(1, :))*2  ...
%                        length(singles(:, 1))/2])';
%     sect    = length(cocis(1, :))/2;
%     clear singles;
%     
%     %%%%%  时间窗筛选
%     %%%%%               
%     cocis = cocis( cocis(:, 3) - cocis(:, sect+3) > -TimeWin & ...
%                    cocis(:, 3) - cocis(:, sect+3) <  TimeWin, :);
%     
%     %%%%%  能量筛选
%     %%%%%
%     cocis = cocis(cocis(:, sect) > EGYWin(1)*EGYPeak/511 & ...
%                   cocis(:, sect) < EGYWin(2)*EGYPeak/511, :);
%     cocis = cocis(cocis(:, end)  > EGYWin(1)*EGYPeak/511 & ...
%                   cocis(:, end)  < EGYWin(2)*EGYPeak/511, :);
%     
%     SinglesRate(1, fpi) = length(cocis(:, 1))/Tacq/60/1000;
% end %%% for fpi = 1


%%%
%%%
[A0, Aave] = GetActivityFn(Acal, Tcal, T0, Tacq);
SR_fit     = [SinglesRate(SinglesRate < BkgRate*2); BkgRate];
A_fit      = [Aave(SinglesRate < BkgRate*2), 0]';
p          = polyfit(A_fit, SR_fit, 1);  %%% 线性拟合
Aref       = (BkgRate*2 - p(2))/p(1);

%%%  绘制系统背景等效活度图
%%%
figure; set(gcf,'outerposition',get(0,'screensize'));
plot(Aave, SinglesRate, 'bs');
hold on; plot(0, BkgRate,   'b^');    %%%  背景计数率
hold on; plot(0, BkgRate*2, 'bv');
hold on; plot([0: max(Aave)], p(1).*[0: max(Aave)]+p(2), 'r');
hold on; xlabel('Activity (kcps)'); ylabel('Singles Rate (kcps)');
hold on; ylim([0, max(SinglesRate)]);